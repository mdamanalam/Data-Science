library(dplyr) ## For data manipulation and visualization
library(ggplot2) # For plots
library(corrplot) ##provides a visual exploratory tool on correlation matrix
# Load data
cars_multi <- read.csv("cars_multi.csv")
cars_price <- read.csv("cars_price.csv")
#Exploratory Data Analysis
# Head of the dataset cars_multi
head(cars_multi)
## ID mpg cylinders displacement horsepower weight acceleration model origin
## 1 1 18 8 307 130 3504 12.0 70 1
## 2 2 15 8 350 165 3693 11.5 70 1
## 3 3 18 8 318 150 3436 11.0 70 1
## 4 4 16 8 304 150 3433 12.0 70 1
## 5 5 17 8 302 140 3449 10.5 70 1
## 6 6 15 8 429 198 4341 10.0 70 1
## car_name
## 1 chevrolet chevelle malibu
## 2 buick skylark 320
## 3 plymouth satellite
## 4 amc rebel sst
## 5 ford torino
## 6 ford galaxie 500
head(cars_price)
## ID price
## 1 1 25561.59
## 2 2 24221.42
## 3 3 27240.84
## 4 4 33684.97
## 5 5 20000.00
## 6 6 30000.00
dim(cars_multi)
## [1] 398 10
dim(cars_price)
## [1] 398 2
# Join two dataset
cars <- left_join(cars_multi, cars_price, by = "ID")
#Display names of columns / attributes / features / variables
colnames(cars)
## [1] "ID" "mpg" "cylinders" "displacement" "horsepower" 
## [6] "weight" "acceleration" "model" "origin" "car_name" 
## [11] "price"
# Checking missing cases
sum(!complete.cases(cars))
## [1] 0
#Overview of the dataset
summary(cars)
## ID mpg cylinders displacement 
## Min. : 1.0 Min. : 9.00 Min. :3.000 Min. : 68.0 
## 1st Qu.:100.2 1st Qu.:17.50 1st Qu.:4.000 1st Qu.:104.2 
## Median :199.5 Median :23.00 Median :4.000 Median :148.5 
## Mean :199.5 Mean :23.51 Mean :5.455 Mean :193.4 
## 3rd Qu.:298.8 3rd Qu.:29.00 3rd Qu.:8.000 3rd Qu.:262.0 
## Max. :398.0 Max. :46.60 Max. :8.000 Max. :455.0 
## horsepower weight acceleration model 
## Length:398 Min. :1613 Min. : 8.00 Min. :70.00 
## Class :character 1st Qu.:2224 1st Qu.:13.82 1st Qu.:73.00 
## Mode :character Median :2804 Median :15.50 Median :76.00 
## Mean :2970 Mean :15.57 Mean :76.01 
## 3rd Qu.:3608 3rd Qu.:17.18 3rd Qu.:79.00 
## Max. :5140 Max. :24.80 Max. :82.00 
## origin car_name price 
## Min. :1.000 Length:398 Min. : 1598 
## 1st Qu.:1.000 Class :character 1st Qu.:23110 
## Median :1.000 Mode :character Median :30000 
## Mean :1.573 Mean :29684 
## 3rd Qu.:2.000 3rd Qu.:36430 
## Max. :3.000 Max. :53746
#Structure of the dataset
str(cars)
## 'data.frame': 398 obs. of 11 variables:
## $ ID : int 1 2 3 4 5 6 7 8 9 10 ...
## $ mpg : num 18 15 18 16 17 15 14 14 14 15 ...
## $ cylinders : int 8 8 8 8 8 8 8 8 8 8 ...
## $ displacement: num 307 350 318 304 302 429 454 440 455 390 ...
## $ horsepower : chr "130" "165" "150" "150" ...
## $ weight : int 3504 3693 3436 3433 3449 4341 4354 4312 4425 3850 ...
## $ acceleration: num 12 11.5 11 12 10.5 10 9 8.5 10 8.5 ...
## $ model : int 70 70 70 70 70 70 70 70 70 70 ...
## $ origin : int 1 1 1 1 1 1 1 1 1 1 ...
## $ car_name : chr "chevrolet chevelle malibu" "buick skylark 320" "plymouth 
satellite" "amc rebel sst" ...
## $ price : num 25562 24221 27241 33685 20000 ...
ggplot(cars, aes(mpg)) +
 geom_histogram(binwidth = 5) +
 labs(title = "Histogram of MPG", y = "Count") +
 theme_classic()
#Finding: We can see that the most common mpg is something between 15 and 20 mpg
#2. Cylinders
ggplot(cars, aes(cylinders)) +
 geom_bar() +
 labs(title = "Cylinders", y = "Count") +
 theme_classic()
#Finding: For cylinders we can see that 4 cylinders is 2 times more often than 8 c
ylinders
#3. Displacement
boxplot(cars$displacement, data=cars$displacement, main="Box Plot Displacement", 
 xlab="", ylab="Displacement"
#4: Horsepower 
count(cars[as.character(cars$horsepower) == "?",])
## n
## 1 6
#Finding: In fact we have 6 missing values at horsepower.
#5: Weight
ggplot(cars, aes(weight)) +
 geom_histogram(binwidth = 5) +
 labs(title = "Histogram of Weight", y = "Count") +
 theme_classic()
#Finding: For Weight we see that the most common weight is something between 2000 
and 3000. But most important we saw that we have the only one unique weight for th
e majority of the cars
#6: Acceleration
ggplot(cars, aes(acceleration)) +
 geom_density() +
 labs(title = "Density of Weight") +
 theme_classic()
#7. Model
to_Plot <- as.data.frame(table(cars$model))
colnames(to_Plot) <- c("Model", "Frequency")
ggplot(to_Plot, aes(x = Model, y = Frequency)) +
 geom_bar(stat = "identity") +
 labs(title = "Model") +
 theme_classic()
#Finding: As we can see we have a good a balance sample for model
#8. Origin
ggplot(cars, aes(origin)) +
 geom_bar() +
 labs(title = "Origin", y = "Count") +
 theme_classic()
#9. Price
#For price we decide to do some pre-processing to make more simpler. We are going 
to keep only the value before the point. For example: If we have 
1598.07337 we are going to keep only 1598.
#We made this decision because we believe that the value after the point is meanin
gless
cars$price <- as.integer(cars$price)
boxplot(cars$price, data=cars$price, main="Price BoxPLot", 
 xlab="", ylab="Price")
#Finding: Looking at the box plot of price we can see that we have only one
Outlier
to_Plot <- as.data.frame(table(cars$price))
colnames(to_Plot) <- c("Price", "Frequency")
ggplot(head(to_Plot[ order(-to_Plot[,2]), ]), aes(x = reorder(Price, Frequency), y 
= Frequency)) +
 geom_bar(stat = "identity") +
 labs(title = "Common Price", x = "Price") +
 theme_classic() +
 coord_flip()
#Correlation
#At this plot we can see the correlation between all features. 
# Transforming from factor to numeric
cars$horsepower <- as.numeric(as.character(cars$horsepower))
## Warning: NAs introduced by coercion
## Warning: NAs introduced by coercion
# Removing not complete row 
cars <- cars[complete.cases(cars),]
# Removing the ID
cars <- cars[,-1]
nums <- sapply(cars, is.numeric)
correlations <- cor(cars[,nums])
corrplot(correlations, order = "hclust")





2


#Import the dataset
loan <- read.csv("credit_data.csv")
#Structure
str(loan)

loan.subset <- loan[c('Creditability','Age..years.','Sex...Marital.Status','Occupa
tion','Account.Balance','Credit.Amount','Length.of.current.employment','Purpose')]

str(loan.subset)
head(loan.subset)
normalize <- function(x) {
 return ((x - min(x)) / (max(x) - min(x))) }
loan.subset.n <- as.data.frame(lapply(loan.subset[,2:8], normalize))

#Normalized dataset
head(loan.subset.n)

set.seed(123)
dat.d <- sample(1:nrow(loan.subset.n),size=nrow(loan.subset.n)*0.7,replace=FALSE) 
#random selection of 70% data.
train.loan <- loan.subset[dat.d,] # 70% training data
test.loan <- loan.subset[-dat.d,] # remaining 30% test data
#Creating seperate dataframe for 'Creditability' feature which is our target.
train.loan_labels <- loan.subset[dat.d,1]
test.loan_labels <-loan.subset[-dat.d,1]

library(class) 

NROW(train.loan_labels)

knn.26 <- knn(train=train.loan, test=test.loan, cl=train.loan_labels, k=26)
knn.27 <- knn(train=train.loan, test=test.loan, cl=train.loan_labels, k=27)

#Model Evaluation
#Calculate the proportion of correct classification for k = 26, 27
ACC.26 <- 100 * sum(test.loan_labels == knn.26)/NROW(test.loan_labels)
ACC.27 <- 100 * sum(test.loan_labels == knn.27)/NROW(test.loan_labels)
ACC.26
## [1] 68.66667
ACC.27

table(knn.26 ,test.loan_labels) 

knn.26

table(knn.27 ,test.loan_labels)
## test.loan_labels
## knn.27 0 1
## 0 8 6
## 1 87 199
knn.27

library(caret)
## Loading required package: ggplot2
## Loading required package: lattice
confusionMatrix(table(knn.26 ,test.loan_labels))

i=1
k.optm=1
for (i in 1:28){
 knn.mod <- knn(train=train.loan, test=test.loan, cl=train.loan_labels, k=i)
 k.optm[i] <- 100 * sum(test.loan_labels == knn.mod)/NROW(test.loan_labels)
 k=i
 cat(k,'=',k.optm[i],'') }
#Accuracy plot; Graphical representation
plot(k.optm, type="b", xlab="K- Value",ylab="Accuracy level")






